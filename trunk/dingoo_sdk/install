#!/bin/bash

if [ ! -d "$DINGOO_SDK" ]; then
	echo "DINGOO_SDK environment variable not set/valid."
	exit 0
fi

if [ ! -d "$MIPSTOOLS" ]; then
	echo "MIPSTOOLS environment variable not set/valid."
	exit 0
fi

if [ -d "$WINDIR" ]; then
	SET nodosfilewarning
	$DINGOO_SDK/tools/mipstools_fix/mipstools_fix
else
	rm -f $DINGOO_SDK/tools/elf2app/elf2app
	cc $DINGOO_SDK/tools/elf2app/src/*.c -o $DINGOO_SDK/tools/elf2app/elf2app
	rm -f $DINGOO_SDK/tools/bin2h/bin2h
	cc $DINGOO_SDK/tools/bin2h/src/bin2h.c -o $DINGOO_SDK/tools/bin2h/bin2h
fi

cd $DINGOO_SDK/src/libc && make clean && make headers
cd $DINGOO_SDK/src/jz4740 && make clean && make headers
cd $DINGOO_SDK/src/sml && make clean && make headers
cd $DINGOO_SDK/src/modplay && make clean && make headers

cd $DINGOO_SDK/src/libc && make
cd $DINGOO_SDK/src/jz4740 && make
cd $DINGOO_SDK/src/sml && make
cd $DINGOO_SDK/src/modplay && make

rm -f $DINGOO_SDK/lib/libgcc.a
cp $MIPSTOOLS/lib/gcc/mipsel-linux/*/libgcc.a $DINGOO_SDK/lib

rm -f $DINGOO_SDK/lib/dingoo.xn
echo "ENTRY(AppMain)
OUTPUT_FORMAT("elf32-tradlittlemips")
SECTIONS { .dingoo 0x80A00000 : { $DINGOO_SDK/lib/dingoo.o (.text)
                                  *(.text*)
                                  *(.rodata*)
                                  *(.data*)
                                  *(.eh_frame*)
                                  *(.gcc_except_table*)
                                  *(.lit8)
                                  *(.lit4)
                                  *(.sdata)
                                }
                                  _fbss = .;
           .bss :               {
                                  *(.sbss)
                                  *(.scommon)
                                  *(.bss)
                                  *(COMMON)
                                }
                                  _end = . ;
           /DISCARD/ : { *(*) }
         }

" > $DINGOO_SDK/lib/dingoo.xn

echo "Dingoo SDK installed."
